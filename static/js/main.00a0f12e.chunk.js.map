{"version":3,"sources":["Components/Task.js","Components/TaskContainer.js","Components/NavBar.js","Pages/Home.js","App.js","index.js"],"names":["Task","props","tasks","map","task","className","completed","isImportant","title","id","onClick","click","style","height","class","TaskContainer","noTasksMessage","taskList","length","NavBar","useState","inputText","setInputText","setIsImportant","type","placeholder","maxLength","value","onChange","e","target","checked","handleAddTask","Home","setTasks","handleClick","currentTask","filter","toString","currentTarget","stateWithoutCurrentTask","completedTasks","displayContainters","container","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","minHeight","text","newTask","Math","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00a0f12e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst importantStyle = \"list-group-item task p-2 font-weight-bold\";\r\nconst unImportantStyle = \"list-group-item task p-2\";\r\nconst completedStyle = \"list-group-item task-completed p-2 font-weight-light\";\r\nconst Task = (props) => {\r\n  const displayTaskList = props.tasks.map((task) => (\r\n    <li\r\n      className={\r\n        task.completed === \"true\"\r\n          ? completedStyle\r\n          : task.isImportant\r\n          ? importantStyle\r\n          : unImportantStyle\r\n      }\r\n      key={task.id}>\r\n      <div className=\"row p-1\">\r\n        <div className=\"col-8 align-self-center\">{task.title}</div>\r\n        <div className=\"col-4\">\r\n          {task.completed === \"false\" ? (\r\n            <button\r\n              id={task.id}\r\n              onClick={props.click}\r\n              style={{ height: \"100%\" }}\r\n              className=\"btn btn-success btn-md float-right\">\r\n              <i class=\"fas fa-arrow-right\"></i>\r\n            </button>\r\n          ) : null}\r\n          {task.completed === \"inProgress\" ? (\r\n            <button\r\n              id={task.id}\r\n              onClick={props.click}\r\n              style={{ height: \"100%\" }}\r\n              className=\"btn btn-success btn-md float-right\">\r\n              <i class=\"fas fa-arrow-right\"></i>\r\n            </button>\r\n          ) : null}\r\n          {task.completed === \"true\" ? (\r\n            <button\r\n              id={task.id}\r\n              onClick={props.click}\r\n              style={{ height: \"100%\" }}\r\n              className=\"btn btn-danger btn-md float-right\">\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  ));\r\n  return displayTaskList;\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task.js\";\r\n\r\nconst TaskContainer = (props) => {\r\n  let noTasksMessage;\r\n  if (props.title === \"To do\") {\r\n    noTasksMessage = \"nothing to do, good job\";\r\n  }\r\n  if (props.title === \"In progress\") {\r\n    noTasksMessage = \"no tasks there, start doing something!\";\r\n  }\r\n  if (props.title === \"Completed\") {\r\n    noTasksMessage = \"no tasks completed, lazy!\";\r\n  }\r\n  const taskList =\r\n    props.tasks.length > 0 ? (\r\n      <Task tasks={props.tasks} click={props.click} />\r\n    ) : (\r\n      <div className=\"h3 text-center\">{noTasksMessage}</div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"taskContainer card rounded\">\r\n      <div className=\"card-body\">\r\n        <div className=\"card-title h5 p-2\">{props.title}</div>\r\n        <ul className=\"list-group list-group-flush rounded\">{taskList}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskContainer;\r\n","import React, { useState } from \"react\";\r\n\r\nconst NavBar = (props) => {\r\n  //state to control input values\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [isImportant, setIsImportant] = useState(false);\r\n\r\n  //functions handling controlled components input\r\n  const handleInputText = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const handleCheckbox = (e) => {\r\n    setIsImportant(!isImportant);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row p-5\">\r\n      <div className=\"col-lg-2\"></div>\r\n      <div className=\"col-lg-7\">\r\n        <div className=\"input-group input-group-lg flex-nowrap m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"enter new task\"\r\n            maxLength=\"70\"\r\n            value={inputText}\r\n            onChange={handleInputText}\r\n          />\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text small\">is it important?</span>\r\n            <div className=\"input-group-text\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isImportant}\r\n                onChange={handleCheckbox}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-lg-3\">\r\n        <button\r\n          onClick={() => {\r\n            props.handleAddTask(inputText, isImportant);\r\n            setIsImportant(false);\r\n            setInputText(\"\");\r\n          }}\r\n          className=\"btn btn-success m-2 btn-lg \">\r\n          add task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import TaskContainer from \"../Components/TaskContainer\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NavBar from \"../Components/NavBar.js\";\r\nconst Home = () => {\r\n  //HOOKS **********************\r\n\r\n  const [tasks, setTasks] = useState([\r\n    //three states are needed, using string instead of boolean\r\n    // { title: \"Eat out\", completed: \"false\", id: 1, isImportant: false },\r\n    // { title: \"Grab a drink\", completed: \"true\", id: 2, isImportant: false },\r\n    // {\r\n    //   title: \"Play with a cat\",\r\n    //   completed: \"inProgress\",\r\n    //   id: 3,\r\n    //   isImportant: false,\r\n    // },\r\n    // { title: \"Lorem ipsum\", completed: \"false\", id: 4, isImportant: true },\r\n    // {\r\n    //   title: \"Lorem ipsum dolores aloha\",\r\n    //   completed: \"true\",\r\n    //   id: 5,\r\n    //   isImportant: false,\r\n    // },\r\n    // {\r\n    //   title: \"Lorem ipsum Dolores Aloha IHS\",\r\n    //   completed: \"inProgress\",\r\n    //   id: 6,\r\n    //   isImportant: false,\r\n    // },\r\n    // { title: \"Lorem ipsum\", completed: \"inProgress\", id: 7, isImportant: true },\r\n    // {\r\n    //   title: \"Lorem ipsum dolores aloha\",\r\n    //   completed: \"false\",\r\n    //   id: 8,\r\n    //   isImportant: true,\r\n    // },\r\n    // {\r\n    //   title: \"Lorem ipsum Dolores Aloha IHS\",\r\n    //   completed: \"true\",\r\n    //   id: 9,\r\n    //   isImportant: true,\r\n    // },\r\n  ]);\r\n\r\n  //Click handler\r\n\r\n  const handleClick = (e) => {\r\n    let currentTask = tasks.filter(\r\n      (task) => task.id.toString() === e.currentTarget.id\r\n    );\r\n    const stateWithoutCurrentTask = tasks.filter(\r\n      (task) => task.id.toString() !== e.currentTarget.id\r\n    );\r\n    currentTask = currentTask[0];\r\n    if (currentTask.completed === \"false\") {\r\n      currentTask.completed = \"inProgress\";\r\n      setTasks([...stateWithoutCurrentTask, currentTask]);\r\n    } else if (currentTask.completed === \"inProgress\") {\r\n      currentTask.completed = \"true\";\r\n      setTasks([...stateWithoutCurrentTask, currentTask]);\r\n    } else if (currentTask.completed === \"true\") {\r\n      setTasks([...stateWithoutCurrentTask]);\r\n    }\r\n  };\r\n  const handleAddTask = (text, isImportant) => {\r\n    const newTask = {\r\n      title: text,\r\n      completed: \"false\",\r\n      id: Math.random(),\r\n      isImportant: isImportant,\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n  //DISPLAY *********************\r\n\r\n  //create 3 lists, one for each completion step\r\n  const completedTasks = tasks.filter((task) => task.completed === \"true\");\r\n  const incompletedTasks = tasks.filter((task) => task.completed === \"false\");\r\n  const inProgressTasks = tasks.filter(\r\n    (task) => task.completed === \"inProgress\"\r\n  );\r\n  //3 main components will be build based on this list\r\n  const containerType = [\r\n    { title: \"To do\", completed: \"false\", tasks: incompletedTasks },\r\n    { title: \"In progress\", completed: \"inProgress\", tasks: inProgressTasks },\r\n    { title: \"Completed\", completed: \"true\", tasks: completedTasks },\r\n  ];\r\n  const displayContainters = containerType.map((container) => (\r\n    <div key={container.id} className=\"col-lg p-3\">\r\n      <TaskContainer\r\n        title={container.title}\r\n        tasks={container.tasks}\r\n        click={handleClick}\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  //gets state from localstorage\r\n  useEffect(() => {\r\n    setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\r\n  }, []);\r\n  //sets state in localstorage on every component rerender\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  });\r\n\r\n  return (\r\n    <div className=\"home container-fluid text-lowercase\">\r\n      <div className=\"row spacer\" style={{ minHeight: \"12px\" }}></div>\r\n      <NavBar handleAddTask={handleAddTask} />\r\n      <div className=\"row px-5\">{displayContainters}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./Style/App.css\";\nimport Home from \"./Pages/Home.js\";\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Style/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}